package oop;

public class Packages {
    public static void main(String[] args) {
        /*
        Как правило, в Java классы объединяются в пакеты.

        Пакеты позволяют организовать классы логически в наборы.
        По умолчанию java уже имеет ряд встроенных пакетов, например,
        java.lang, java.util, java.io и т.д.
        Кроме того, пакеты могут иметь вложенные пакеты.

        Организация классов в виде пакетов позволяет избежать конфликта имен
        между классами. Ведь нередки ситуации, когда разработчики называют свои
        классы одинаковыми именами. Принадлежность к пакету позволяет
        гарантировать однозначность имен.

        Чтобы указать, что класс принадлежит определенному пакету,
        надо использовать директиву package, после которой указывается
        имя пакета:

        package название_пакета;

        Как правило, названия пакетов соответствуют физической структуре проекта
        то есть организации каталогов, в которых находятся файлы с исходным
        кодом.

        А путь к файлам внутри проекта соответствует названию пакета этих
        файлов. Например, если классы принадлежат пакету mypack, то эти классы
        помещаются в проекте в папку mypack.

        Классы необязательно определять в пакеты. Если для класса пакет не
        определен, то считается, что данный класс находится в пакете по
        умолчанию, который не имеет имени.

        Например, создадим в папке для исходных файлов каталог study.
        В нем создадим файл Program.java со следующим кодом:

        package study;

        public class Program {
            public static void main(String[] args) {
                Person kate = new Person("Kate", 32);
                kate.displayInfo();
            }
        }

        class Person{

            String name;
            int age;

            Person(String name, int age){
                this.name = name;
                this.age = age;
            }
            void displayInfo(){
                System.out.printf("Name: %s \t Age: %d \n", name, age);
            }
        }

        Директива package study в начале файла указывает, что классы Program
        и Person, которые здесь определены, принадлежат пакету study.

        Когда мы работаем в среде разработки, например, в Netbeans, то IDE
        берет на себя все вопросы компиляции пакетов и входящих в них файлов.
        Соответственно нам достаточно нажать на кнопку, и все будет готово.
        Однако если мы компилируем программу в командной строке, то мы можем
        столкнуться с некоторыми трудностями. Поэтому рассмотрим этот аспект.

        Для компиляции программы вначале в командной строке/терминале с помощью
        команды cd перейдем к папке, где находится каталог study.

        cd C:\java

        Например, в моем случае это каталог C:\java (то есть файл с исходным
        кодом расположен по пути C:\java\study\Program.java).

        Для компиляции выполним команду

javac study\Program.java
После этого в папке study появятся скомпилированные файлы Program.class и Person.class. Для запуска программы выполним команду:

java study.Program
         */

        Math.random();
    }
}